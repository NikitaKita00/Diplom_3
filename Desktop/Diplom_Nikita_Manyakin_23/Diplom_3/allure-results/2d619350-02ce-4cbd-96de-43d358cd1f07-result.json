{"name": "Доступность оформления заказа", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (484, 1364) is out of bounds of viewport dimensions (1920, 955)\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nMoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:518:5\nassertTargetInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:3122:11\n#assertInViewPort@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:67:17\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:187:42", "trace": "self = <tests.test_main_functions.TestMainFunctions object at 0x000002494739D700>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"d10eb5a4-3663-4a64-9bad-6955212f51f0\")>\n\n    @allure.title(\"Доступность оформления заказа\")\n    @allure.description(\"Проверка, что залогиненный пользователь может оформить заказ\")\n    def test_order_creation_enabled(self, driver):\n        register_and_login()\n        constructor_page = ConstructorPage()\n        constructor_page.add_ingredient(BUN_1)\n        constructor_page.add_ingredient(SAUCE_1)\n>       constructor_page.add_ingredient(FILLING1_1)\n\ntests\\test_main_functions.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\constructor_page.py:31: in add_ingredient\n    ac.perform()\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py:93: in perform\n    self.w3c_actions.perform()\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py:168: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000249473FA210>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"move target out of bounds\",\"message\":\"Move target (484, 1364) is out of b...sys.mjs:67:17\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:187:42\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (484, 1364) is out of bounds of viewport dimensions (1920, 955)\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nE       MoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:518:5\nE       assertTargetInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:3122:11\nE       #assertInViewPort@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:67:17\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:187:42\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: MoveTargetOutOfBoundsException"}, "description": "Проверка, что залогиненный пользователь может оформить заказ", "steps": [{"name": "Регистрация нового пользователя (через API)", "status": "passed", "start": 1757402885889, "stop": 1757402886055}, {"name": "Вход от имени зарегистрированного пользователя", "status": "passed", "parameters": [{"name": "email", "value": "'qwsffywszteb@test.do'"}, {"name": "password", "value": "'eotananluu'"}], "start": 1757402886055, "stop": 1757402888861}, {"name": "Добавление ингредиента в бургер", "status": "passed", "parameters": [{"name": "name", "value": "'Флюоресцентная булка R2-D3'"}], "start": 1757402888861, "stop": 1757402889429}, {"name": "Добавление ингредиента в бургер", "status": "passed", "parameters": [{"name": "name", "value": "'Соус с шипами Антарианского плоскоходца'"}], "start": 1757402889429, "stop": 1757402889990}, {"name": "Добавление ингредиента в бургер", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (484, 1364) is out of bounds of viewport dimensions (1920, 955)\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nMoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:518:5\nassertTargetInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:3122:11\n#assertInViewPort@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:67:17\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:187:42\n\n", "trace": "  File \"C:\\Users\\n.manyakin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\n.manyakin\\Desktop\\Diplom_Nikita_Manyakin_23\\Diplom_3\\pages\\constructor_page.py\", line 31, in add_ingredient\n    ac.perform()\n  File \"C:\\Users\\n.manyakin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py\", line 93, in perform\n    self.w3c_actions.perform()\n  File \"C:\\Users\\n.manyakin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py\", line 168, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"C:\\Users\\n.manyakin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 454, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\n.manyakin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "name", "value": "'Хрустящие минеральные кольца'"}], "start": 1757402889990, "stop": 1757402890016}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1757402885889, "stop": 1757402890018, "uuid": "52c0caa8-8c8e-47c1-bd76-f0e4765c58f8", "historyId": "e01b3eb6a006723888b6414032de8a02", "testCaseId": "d313a5832a522739c411e51102dc000f", "fullName": "tests.test_main_functions.TestMainFunctions#test_order_creation_enabled", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_functions"}, {"name": "subSuite", "value": "TestMainFunctions"}, {"name": "host", "value": "RUMSKLCG1160Z8S"}, {"name": "thread", "value": "10296-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_functions"}]}